{"version":3,"sources":["components/navigator/navStyle.js","components/navigator/index.js","components/leaderboard/index.js"],"names":["NavLink","styled","wrapComponent","props","css","state","heightOfNavigator","windowWidth","lighterDarkColor","onMouseDown","evt","redirectToPage","nightModeColorSwitch","isNightMode","_","pick","currentValorantActId","useRef","objectOfActIdsRef","useState","finalTableJsx","setFinalTableJsx","arrayOfTableValueObjects","useLayoutEffect","$","ajax","method","crossDomain","url","dataType","success","res","objectOfActIds","indexOfEpisodes","console","log","i","acts","length","item","type","name","id","isActive","current","getRankedData","cloneDeep","error","oldValorantContentJson","actId","rankedUrlCall","extractThingsFromAnArrayOfObjectsToMakeATable","players","oldValorantRankedJson","jsonToBeTabled","jsxArray","makeGridRowOutOfAnArray","arrayToMakeGridRowOf","rowIndex","push","Object","values","keys","darkestColor","windowHeight"],"mappings":"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","file":"static/js/8.1bb7c9d6.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport styled from \"@emotion/styled\";\r\n\r\n//font: 24px Monaco;\r\n//color: white;\r\n//border-left: 3px solid white;\r\n//border-right: 3px solid white;\r\n//border-top: 1px solid white;\r\n//border-bottom: 1px solid white;\r\nexport const NavLink = styled(\"div\")`\r\n  font: 24px Knewave;\r\n  color: white;\r\n  -webkit-text-stroke-width: 1px;\r\n  -webkit-text-stroke-color: black;\r\n  text-shadow: 1px 1px black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  height: 39px;\r\n  border-radius: 0px;\r\n  user-select: none;\r\n`;","/** @jsxImportSource @emotion/react */\r\nimport { wrapComponent } from \"../userContext/userContext.js\";\r\nimport _ from \"lodash/fp\";\r\nimport { css } from \"@emotion/react\"\r\nimport * as NavStyle from \"./navStyle.js\"\r\n\r\nconst Navigator = (props) => {\r\n  return(\r\n    <div\r\n      css={css`\r\n        display: flex;\r\n        flex-direction: row;\r\n        height: ${props.state.heightOfNavigator}px;\r\n        width: ${props.state.windowWidth}px;\r\n        background: rgb(25,25,25);\r\n        background: linear-gradient(58deg, rgba(52,84,209,1) 0px, #d1345b 126px, #acf39d 100%);\r\n        align-items: flex-start;\r\n      `}\r\n    >\r\n      <div\r\n        css={css`\r\n          width: ${props.state.windowWidth}px;\r\n          background: ${props.state.lighterDarkColor};\r\n          height: 43px;\r\n          display: flex;\r\n          flex-direction: row;\r\n          align-items: center;\r\n        `}\r\n      >\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n          background: ${props.state.lighterDarkColor};\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/\")\r\n        }}\r\n      >\r\n        SkettiOdin\r\n      </NavStyle.NavLink>\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n          background: ${props.state.lighterDarkColor};\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/\")\r\n        }}\r\n      >\r\n        Home\r\n      </NavStyle.NavLink>\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n          background: ${props.state.lighterDarkColor};\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/leaderboard\")\r\n        }}\r\n      >\r\n        Leaderboard\r\n      </NavStyle.NavLink>\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n          background: ${props.state.lighterDarkColor};\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.nightModeColorSwitch(!props.state.isNightMode)\r\n        }}\r\n      >\r\n        Night Mode\r\n      </NavStyle.NavLink>\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n          background: ${props.state.lighterDarkColor};\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/wxadventures\")\r\n        }}\r\n      >\r\n        WX Adventures\r\n      </NavStyle.NavLink>\r\n\r\n      {/*\r\n      <NavStyle.NavLink\r\n        css={css`\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/logo\")\r\n        }}\r\n      >\r\n        Logo\r\n      </NavStyle.NavLink>\r\n\r\n      <NavStyle.NavLink\r\n        css={css`\r\n        `}\r\n        onMouseDown={(evt) => {\r\n          props.redirectToPage(\"/logoWithoutBackground\")\r\n        }}\r\n      >\r\n        Logo Without Background\r\n      </NavStyle.NavLink>\r\n      */}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default wrapComponent(\r\n  Navigator,\r\n  _.pick([\r\n    \"redirectToPage\",\r\n    \"state.windowWidth\",\r\n    \"state.heightOfNavigator\",\r\n    \"state.isNightMode\",\r\n    \"nightModeColorSwitch\",\r\n    \"state.darkestColor\",\r\n    \"state.lighterDarkColor\"\r\n  ])\r\n);","/** @jsxImportSource @emotion/react */\r\nimport { wrapComponent } from \"../userContext/userContext.js\";\r\nimport _ from \"lodash/fp\";\r\nimport React, { useEffect, useLayoutEffect, useState, useRef } from \"react\"\r\nimport { css } from \"@emotion/react\"\r\nimport Navigator from \"../navigator/index.js\";\r\nimport $ from \"jQuery\";\r\n\r\nimport oldValorantContentJson from \"components/jsonsCauseCorsAndKeys/valContent.json\";\r\nimport oldValorantRankedJson from \"components/jsonsCauseCorsAndKeys/valRankedAct2Episode3.json\";\r\n\r\nconst Leaderboard = (props) => {\r\n  const valorantContentAPICall = `https://cors-anywhere.herokuapp.com/https://na.api.riotgames.com/val/content/v1/contents?locale=en-US&api_key=GAPI-68ccf153-4183-40ae-9153-573b304f15ff`\r\n  const valorantRankedAPICall = `https://cors-anywhere.herokuapp.com/https://na.api.riotgames.com/val/ranked/v1/leaderboards/by-act/2a27e5d2-4d30-c9e2-b15a-93b8909a442c?size=200&startIndex=0&api_key=GAPI-68ccf153-4183-40ae-9153-573b304f15ff`\r\n  const currentValorantActId = useRef(); //\"2a27e5d2-4d30-c9e2-b15a-93b8909a442c\"\r\n  const objectOfActIdsRef = useRef();\r\n\r\n  const [finalTableJsx, setFinalTableJsx] = useState();\r\n\r\n  const arrayOfTableValueObjects = useRef();\r\n  //1. get the json from riot or use backup if error\r\n  useLayoutEffect(() => {\r\n    $.ajax({\r\n      method: 'GET',\r\n      crossDomain: true,\r\n      url: valorantContentAPICall,\r\n      dataType: 'json', //change the datatype to 'jsonp' works in most cases\r\n      success: (res) => {\r\n        let objectOfActIds = {};\r\n        let indexOfEpisodes = 0;\r\n        console.log(\"fresh ajax success\", res);\r\n        for (let i = 0; i < res.acts.length; i++) {\r\n          let item = res.acts[i];\r\n          if (item.type == \"episode\") { indexOfEpisodes++ }\r\n          if (item.type == \"act\") {\r\n            objectOfActIds[\r\n              \"episode\" +\r\n              indexOfEpisodes +\r\n              \"Act\" +\r\n              (item.name[item.name.length - 1])\r\n            ] = item.id\r\n          };\r\n          if (item.isActive === true && item.type === \"act\") {\r\n            currentValorantActId.current = item.id;\r\n            getRankedData(item.id);\r\n          }\r\n          if (i == res.acts.length - 1) {\r\n            objectOfActIdsRef.current = _.cloneDeep(objectOfActIds)\r\n            console.log(\"finished making the object\", objectOfActIdsRef.current)\r\n          }\r\n        }\r\n      },\r\n      error: () => {\r\n        let objectOfActIds = {};\r\n        let indexOfEpisodes = 0;\r\n        console.log(\"error in ajax requesting valorant content\")\r\n        for (let i = 0; i < oldValorantContentJson.acts.length; i++) {\r\n          let item = oldValorantContentJson.acts[i];\r\n          if (item.type == \"episode\") { indexOfEpisodes++ }\r\n          if (item.type == \"act\") {\r\n            objectOfActIds[\r\n              \"episode\" +\r\n              indexOfEpisodes +\r\n              \"Act\" +\r\n              (item.name[item.name.length - 1])\r\n            ] = item.id\r\n          };\r\n          if (item.isActive === true && item.type === \"act\") {\r\n            currentValorantActId.current = item.id;\r\n            getRankedData(item.id);\r\n          }\r\n\r\n          if (i == oldValorantContentJson.acts.length - 1) {\r\n            objectOfActIdsRef.current = _.cloneDeep(objectOfActIds)\r\n            console.log(\"finished making the object\", objectOfActIdsRef.current)\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const getRankedData = (actId) => {\r\n    const rankedUrlCall = `https://cors-anywhere.herokuapp.com/https://na.api.riotgames.com/val/ranked/v1/leaderboards/by-act/${actId}?size=200&startIndex=0&api_key=GAPI-68ccf153-4183-40ae-9153-573b304f15ff`\r\n    $.ajax({\r\n      method: 'GET',\r\n      crossDomain: true,\r\n      url: rankedUrlCall,\r\n      dataType: 'json', //change the datatype to 'jsonp' works in most cases\r\n      success: (res) => {\r\n        console.log(\"fresh ajax ranked success\", res);\r\n        extractThingsFromAnArrayOfObjectsToMakeATable(res.players)\r\n        arrayOfTableValueObjects.current = res.players;\r\n      },\r\n      error: () => {\r\n        console.log(\"error in ajax requesting valorant ranked content\", oldValorantRankedJson)\r\n        extractThingsFromAnArrayOfObjectsToMakeATable(oldValorantRankedJson.players)\r\n        arrayOfTableValueObjects.current = oldValorantRankedJson.players;\r\n      }\r\n    })\r\n  }\r\n\r\n  const extractThingsFromAnArrayOfObjectsToMakeATable = (jsonToBeTabled) => {\r\n    //In the case of Valorant Ranked API - it is the keys inside the objects that we want to table by\r\n    /*\r\n      [\r\n        {\r\n          ranked: 1,\r\n          name: Hiko\r\n        }, \r\n        {\r\n          ranked: 2,\r\n          typeOfCar: Steel\r\n        } \r\n      ]\r\n    */\r\n    let jsxArray = [];\r\n    const makeGridRowOutOfAnArray = (arrayToMakeGridRowOf, rowIndex) => {\r\n      //pass in column position, \r\n      for(let i = 0; i < arrayToMakeGridRowOf.length; i++){\r\n        jsxArray.push(\r\n          <div\r\n            key={rowIndex * arrayToMakeGridRowOf.length - (arrayToMakeGridRowOf.length - i)}\r\n            css={css`\r\n              grid-column: ${i} / ${i};\r\n              grid-row: ${rowIndex} / ${rowIndex};\r\n              font: 16px montserrat;\r\n              padding: 5px;\r\n              text-align: center;\r\n              background: #dddddd;\r\n              border-width: 1px;\r\n              color: black;\r\n              border-radius: 5px;\r\n              ${i == arrayToMakeGridRowOf.length ? `margin-right: 15px;` : ``}\r\n            `}\r\n          >\r\n            {arrayToMakeGridRowOf[i]}\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    console.log(\"json before we start making tables\", jsonToBeTabled);\r\n\r\n    for (let i = 0; i < jsonToBeTabled.length; i++) {\r\n      //i+2 is pushing things below the top one pushed at last index\r\n      //this should be fixed to be able to be filtered by any of the object values\r\n      makeGridRowOutOfAnArray(Object.values(jsonToBeTabled[i]), i+2);\r\n\r\n      if (i == jsonToBeTabled.length - 1) {\r\n        //setState to make the UI show the table\r\n        makeGridRowOutOfAnArray(Object.keys(jsonToBeTabled[i]), 1);\r\n        setFinalTableJsx(jsxArray)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        background: ${props.state.darkestColor};\r\n        height: ${props.state.windowHeight}px;\r\n        width: ${props.state.windowWidth}px;\r\n      `}\r\n    >\r\n      <Navigator />\r\n\r\n      <div\r\n        /*\r\n          ::-webkit-scrollbar the scrollbar.\r\n          ::-webkit-scrollbar-button the buttons on the scrollbar (arrows pointing upwards and downwards).\r\n          ::-webkit-scrollbar-thumb the draggable scrolling handle.\r\n          ::-webkit-scrollbar-track the track (progress bar) of the scrollbar.\r\n          ::-webkit-scrollbar-track-piece the track (progress bar) NOT covered by the handle.\r\n          ::-webkit-scrollbar-corner the bottom corner of the scrollbar, where both horizontal and vertical scrollbars meet.\r\n          ::-webkit-resizer the draggable resizing handle that appears at the bottom corner of some elements.\r\n        */\r\n        css={css`\r\n          display: grid;\r\n          grid-gap: 5px;\r\n          padding: 15px;\r\n          background: linear-gradient(58deg, rgba(52,84,209,1) 0px, #d1345b 126px, #acf39d 100%);\r\n          background: ${props.state.lighterDarkColor};\r\n          overflow: scroll;\r\n          margin-right: 50px;\r\n          margin-left: 50px;\r\n          margin-top: 40px;\r\n          max-height: ${props.state.windowHeight - props.state.heightOfNavigator - 100}px;\r\n\r\n          //display: flex;\r\n          //flex-direction: column;\r\n          //align-items: center;\r\n          //height: ${props.state.windowHeight - ((34) + 50 + 10)}px; //34 is title height, 50 is margin bottom, 10 is for scroll bar margin (margin-top: 5px in this div)\r\n          //width: ${props.state.windowWidth - (60 + 15)}px;\r\n          //overflow-x: hidden;\r\n          //overflow-y: scroll;\r\n          //margin-top: 5px;\r\n          \r\n\r\n          ::-webkit-scrollbar {\r\n            width: 10px;\r\n            height: 10px;\r\n          }\r\n          \r\n          /* Track */\r\n          ::-webkit-scrollbar-track {\r\n            border-radius: 10px;\r\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n          }\r\n          \r\n          /* Handle */\r\n          ::-webkit-scrollbar-thumb {\r\n            background: #d1345b; \r\n            border-radius: 10px;\r\n          }\r\n          \r\n          /* Handle on hover */\r\n          ::-webkit-scrollbar-thumb:hover {\r\n            background: #d1345b; \r\n          }\r\n        `}\r\n      >\r\n        {finalTableJsx}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default wrapComponent(\r\n  Leaderboard,\r\n  _.pick([\r\n    \"redirectToPage\",\r\n    \"state.windowHeight\",\r\n    \"state.windowWidth\",\r\n    \"state.heightOfNavigator\",\r\n    \"state.darkestColor\",\r\n    \"state.lighterDarkColor\"\r\n  ])\r\n);"],"sourceRoot":""}