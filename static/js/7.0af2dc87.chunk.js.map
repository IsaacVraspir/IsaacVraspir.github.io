{"version":3,"sources":["components/userContext/createWrapComponent.js","components/userContext/usePage.js","components/userContext/userContext.js","App.js"],"names":["createWrapComponent","ConsumerArgument","SmartUpdater","props","extractedOutFunctions","key","extractedOutConstantsAndFunctions","constants","passedInConstantsAndFunctions","nextProps","nextState","thingsThatMayChange","i","length","_","isEqual","this","TheComponent","theComponent","state","normalProps","React","Component","mapContextToProps","id","children","context","UsePage","pageRef","useRef","useState","window","innerWidth","windowWidth","setWindowWidth","innerHeight","windowHeight","setWindowHeight","heightOfNavigator","darkestColor","setDarkestColor","lighterDarkColor","setLighterDarkColor","isNightMode","setIsNightMode","alreadyRedirected","pathname","redirect","setRedirect","updateDimensions","width","height","dimensions","parts","split","parseInt","ReactDOM","unstable_batchedUpdates","callback","undefined","useEffect","addEventListener","removeEventListener","callbackFunctions","redirectToPage","whichPage","nightModeColorSwitch","nightModeToBe","UserContext","createContext","Consumer","wrapComponent","ContextProvider","hooksToImport","usePage","contextHasRanAtLeastOnce","reduceStartingPoint","savedConstants","savedState","member","current","hookDependencies","type","pick","widthOfCordovaSidebar","currentPage","importedHooks","Object","keys","reduce","hookAccumulator","hookKey","hasOwnProperty","stuffToPassIn","argumentAccumulator","thingToPassIn","push","map","arg","obj","path","len","deepValue","value","aggregatedValues","forEach","importableValue","stateOrConstantKey","callbackFunctionKey","Provider","SkettiOdinHome","lazy","Leaderboard","WXAdventures","App","where","to","exact","render"],"mappings":"2SAoEeA,EAjEa,SAAAC,GAAqB,IACzCC,EADwC,kDAE5C,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIC,EAAwB,GAC5B,IAAK,IAAIC,KAAO,EAAKF,MACY,oBAApB,EAAKA,MAAME,IAA+B,iBAARA,IAC3CD,EAAsBC,GAAO,EAAKF,MAAME,IAG5C,IAAIC,EAAiC,eAAQF,GAR5B,MASmB,qBAAzB,EAAKD,MAAMI,YACpBD,EAAkCC,UAAY,EAAKJ,MAAMI,WAE3D,EAAKC,8BAAgCF,EAZpB,EAFyB,yDAiB5C,SAAsBG,EAAWC,GAG/B,IADA,IAAMC,EAAsB,CAAC,cAAe,SACnCC,EAAI,EAAGA,EAAID,EAAoBE,OAAQD,IAC9C,IAAK,IAAIP,KAAOI,EAAUE,EAAoBC,IAC5C,IACGE,IAAEC,QACDC,KAAKb,MAAMQ,EAAoBC,IAAIP,GACnCI,EAAUE,EAAoBC,IAAIP,KAE5B,UAARA,GACQ,aAARA,GACQ,YAARA,GACQ,kBAARA,EAGA,OAAO,EAIb,OAAO,IArCmC,oBAuC5C,WACE,IAAMY,EAAeD,KAAKb,MAAMe,aAChC,OACE,cAACD,EAAD,yBACEE,MAAOH,KAAKb,MAAMgB,OACdH,KAAKR,+BACLQ,KAAKb,MAAMiB,kBA7CuB,GACnBC,IAAMC,WAiDjC,OAAO,SAACL,GAAgD,IAAlCM,EAAiC,uDAAb,SAAAC,GAAE,OAAIA,GAC9C,OAAO,SAAArB,GAAK,OACV,cAACF,EAAD,CACEwB,SAAU,SAAAC,GAAO,OACf,cAACxB,EAAD,yBACEkB,YAAajB,GACToB,EAAkBG,IAFxB,IAGER,aAAcD,W,yBCyBXU,EAnFC,WACd,IAAMC,EAAUC,mBADI,EAEkBC,mBAASC,OAAOC,YAFlC,mBAEbC,EAFa,KAEAC,EAFA,OAGoBJ,mBAASC,OAAOI,aAHpC,mBAGbC,EAHa,KAGCC,EAHD,OAI8BP,mBAAS,IAJvC,mBAIbQ,EAJa,aAKoBR,mBAAS,YAL7B,mBAKbS,EALa,KAKCC,EALD,OAM4BV,mBAAS,WANrC,mBAMbW,EANa,KAMKC,EANL,OAOkBZ,oBAAS,GAP3B,mBAOba,EAPa,KAOAC,EAPA,OASYd,mBAAS,CACvCe,mBAAmB,EACnBC,SAAU,KAXQ,mBASbC,EATa,KASHC,EATG,KAedC,EAAmB,WACvB,IAAIC,EAAQnB,OAAOC,WACfmB,EAASpB,OAAOI,aAEL,SAACiB,GACd,GAAIA,EAAY,CACd,IAAMC,EAAQD,EAAWE,MAAM,KAC/BJ,EAAQK,SAASF,EAAM,IACvBF,EAASI,SAASF,EAAM,IAG1BG,IAASC,yBAAwB,WAC/BvB,EAAegB,GACfb,EAAgBc,MAGlBO,MAASC,IAuCb,OAnCAC,qBAAU,YAC2B,IAA/Bb,EAASF,mBAAqD,KAAtBE,EAASD,UACnDE,EAAY,CAAEH,mBAAmB,EAAMC,SAAU,OAElD,CAACC,IAGJa,qBAAU,WAER,OADA7B,OAAO8B,iBAAiB,SAAUZ,GAC3B,kBAAMlB,OAAO+B,oBAAoB,SAAUb,MACjD,CAACrB,IAGJgC,qBAAU,WACRX,MACC,CAACrB,EAASQ,EAAcH,IAoBpB,CACLd,MAAO,CACLc,cACAG,eACAW,WACAT,oBACAC,eACAE,mBACAE,eAEFoB,kBA5BwB,CACxBC,eAAgB,SAACC,GAEfjB,EAAY,CAAEH,mBAAmB,EAAOC,SAAUmB,KAEpDC,qBAAsB,SAACC,GACD,GAAjBA,IACD3B,EAAgB,WAChBE,EAAoB,WACpBE,GAAe,IAEG,GAAjBuB,IACD3B,EAAgB,QAChBE,EAAoB,QACpBE,GAAe,QC1DjBwB,EAAc/C,IAAMgD,gBAEbC,EAAWF,EAAYE,SACvBC,EAAgBvE,EAAoBsE,GAQpCE,EAAkB,SAAArE,GAC7B,IAAMsE,EAAgB,CACpBC,WAEIC,EAA2B9C,kBAAO,GAClC+C,EAAsB/C,iBAAO,CAAEV,MAAO,GAAIZ,UAAW,KACrDsE,EAAiBhD,iBAAO,IACxBiD,EAAajD,iBAAO,IAS1B,IAAK,IAAIkD,KAAUD,EAAWE,eAAgBF,EAAWE,QAAQD,GAIjE,IAAME,EAAmB,CACvBP,QAAS,CACP,CACEQ,KAAM,SACNC,KAAM,CAAChF,EAAMiF,sBAAuBjF,EAAMkF,gBAM1CC,EAAgBC,OAAOC,KAAKf,GAAegB,QAC/C,SAACC,EAAiBC,GAGhB,GAAIV,EAAiBW,eAAeD,GAAU,CAG5C,IAAME,EAAgBZ,EAAiBU,GAASF,QAAO,SACrDK,EAEAC,GAGA,OAAQA,EAAcb,MACpB,IAAK,OACHY,EAAoBE,KAApB,MAAAF,EAAmB,YACdC,EAAcZ,KAAKc,KAAI,SAAAC,GAAG,OArCzB,SAACC,EAAKC,GACtB,IAAK,IAAIxF,EAAI,EAA2ByF,GAAxBD,EAAOA,EAAK9C,MAAM,MAAiBzC,OAAQD,EAAIyF,EAAKzF,IAClEuF,EAAMA,EAAIC,EAAKxF,IAEjB,OAAOuF,EAkCOG,CAAUZ,EAAiBQ,QAG/B,MACF,IAAK,SACL,QACEJ,EAAoBE,KAApB,MAAAF,EAAmB,YAASC,EAAcZ,OAG9C,OAAOW,IACN,IAGHJ,EAAgBC,GAAWlB,EAAckB,GAAd,MAAAlB,EAAa,YAAaoB,SAErDH,EAAgBC,GAAWlB,EAAckB,KAE3C,OAAOD,IAET,IAQF9B,qBAAU,WACRgB,EAAoBI,QAAU,MAGhC,IAAMuB,EAAQhB,OAAOC,KAAKF,GAAeG,QACvC,SAACe,EAAkBb,GAwBjB,OAvByBhB,EAAyBK,QAC9C,CAAC,SACD,CAAC,QAAS,cACGyB,SAAQ,SAAAC,GACvB,OAAOpB,EAAcK,GAASC,eAAec,GACzCnB,OAAOC,KAAKF,EAAcK,GAASe,IAAkBD,SACrD,SAAAE,GACE,OAAQH,EAAiBE,GAAiBC,GACxCrB,EAAcK,GAASe,GAAiBC,MAG5C,QAIFrB,EAAcK,GAASC,eAAe,sBACxCL,OAAOC,KAAKF,EAAcK,GAAS5B,mBAAmB0C,SACpD,SAAAG,GACEJ,EAAiBI,GACftB,EAAcK,GAAS5B,kBAAkB6C,MAI1CJ,IAET,CAAErF,MAAO,GAAIZ,UAAWsE,EAAeG,UAkBzC,OAfIL,EAAyBK,QAC3BuB,EAAMhG,UAAYsE,EAAeG,QAOjCH,EAAeG,QAAUuB,EAAMhG,UAGjCoE,EAAyBK,SAAU,EAGnCuB,EAAMpF,MAAMkE,YAAclF,EAAMkF,YAE9B,8BACE,cAACjB,EAAYyC,SAAb,CAAsBN,MAAOA,EAA7B,SACGpG,EAAMsB,e,qHCpITqF,EAAiBC,gBAAK,kBAAM,uDAC5BC,EAAcD,gBAAK,kBAAM,6DACzBE,EAAeF,gBAAK,kBAAM,oEA8EjBG,UA1EH,SAAC/G,GACX,OACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,UACG,SAACuB,GAAD,OACC,eAAC,IAAD,WACIA,EAAQP,MAAM4B,SAASF,mBACU,KAAjCnB,EAAQP,MAAM4B,SAASoE,MAIrB,KAHF,cAAC,IAAD,CACEC,GAAI,CAAEtE,SAAUpB,EAAQP,MAAM4B,SAASD,YAI3C,cAAC,IAAD,CACEuE,OAAO,EACPjB,KAAM,IACNkB,OAAQ,SAACnH,GAAD,OACN,cAAC2G,EAAD,eACM3G,OAKV,cAAC,IAAD,CACEkH,OAAO,EACPjB,KAAM,eACNkB,OAAQ,SAACnH,GAAD,OACN,cAAC6G,EAAD,eACM7G,OAKV,cAAC,IAAD,CACEkH,OAAO,EACPjB,KAAM,gBACNkB,OAAQ,SAACnH,GAAD,OACN,cAAC8G,EAAD,eACM9G","file":"static/js/7.0af2dc87.chunk.js","sourcesContent":["import { default as React } from \"react\";\r\nimport _ from \"lodash/fp\";\r\n\r\nconst createWrapComponent = ConsumerArgument => {\r\n  class SmartUpdater extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let extractedOutFunctions = {};\r\n      for (let key in this.props) {\r\n        if (typeof this.props[key] === \"function\" && key !== \"theComponent\") {\r\n          extractedOutFunctions[key] = this.props[key];\r\n        }\r\n      }\r\n      let extractedOutConstantsAndFunctions = { ...extractedOutFunctions };\r\n      if (typeof this.props.constants !== \"undefined\") {\r\n        extractedOutConstantsAndFunctions.constants = this.props.constants;\r\n      }\r\n      this.passedInConstantsAndFunctions = extractedOutConstantsAndFunctions;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      //console.log(\"normal props is\",nextProps);\r\n      const thingsThatMayChange = [\"normalProps\", \"state\"];\r\n      for (let i = 0; i < thingsThatMayChange.length; i++) {\r\n        for (let key in nextProps[thingsThatMayChange[i]]) {\r\n          if (\r\n            !_.isEqual(\r\n              this.props[thingsThatMayChange[i]][key],\r\n              nextProps[thingsThatMayChange[i]][key]\r\n            ) &&\r\n            key !== \"match\" &&\r\n            key !== \"location\" &&\r\n            key !== \"history\" &&\r\n            key !== \"staticContext\"\r\n          ) {\r\n            //console.log(\"this was different:\",key,this.props.theComponent);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    render() {\r\n      const TheComponent = this.props.theComponent;\r\n      return (\r\n        <TheComponent\r\n          state={this.props.state}\r\n          {...this.passedInConstantsAndFunctions}\r\n          {...this.props.normalProps}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return (TheComponent, mapContextToProps = id => id) => {\r\n    return props => (\r\n      <ConsumerArgument\r\n        children={context => (\r\n          <SmartUpdater\r\n            normalProps={props}\r\n            {...mapContextToProps(context)}\r\n            theComponent={TheComponent}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  };\r\n};\r\n\r\nexport default createWrapComponent;","import { useState, useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst UsePage = () => {\r\n  const pageRef = useRef();\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n  const [heightOfNavigator, setHeightOfNavigator] = useState(45);\r\n  const [darkestColor, setDarkestColor] = useState(\"#191919\");\r\n  const [lighterDarkColor, setLighterDarkColor] = useState(\"#313131\");\r\n  const [isNightMode, setIsNightMode] = useState(true);\r\n  \r\n  const [redirect, setRedirect] = useState({\r\n    alreadyRedirected: true,\r\n    pathname: \"\",\r\n  });\r\n\r\n  //Figures out the window's dimensions and sets the App's state with it\r\n  const updateDimensions = () => {\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n\r\n    let callback = (dimensions) => {\r\n      if (dimensions) {\r\n        const parts = dimensions.split(\",\");\r\n        width = parseInt(parts[0]);\r\n        height = parseInt(parts[1]);\r\n      }\r\n\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n        setWindowWidth(width);\r\n        setWindowHeight(height);\r\n      });\r\n    };\r\n      callback(undefined);\r\n  };\r\n\r\n  //redirect global located at top of App.js\r\n  useEffect(() => {\r\n    if (redirect.alreadyRedirected === false && redirect.pathname !== \"\") {\r\n      setRedirect({ alreadyRedirected: true, pathname: \"\" });\r\n    }\r\n  }, [redirect]);\r\n\r\n  //update width and height state on resize\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, [pageRef]);\r\n\r\n  //componentdidmount\r\n  useEffect(() => {\r\n    updateDimensions();\r\n  }, [pageRef, windowHeight, windowWidth]);\r\n\r\n  const callbackFunctions = {\r\n    redirectToPage: (whichPage) => {\r\n      //console.log(\"redirecting\", whichPage)\r\n      setRedirect({ alreadyRedirected: false, pathname: whichPage });\r\n    },\r\n    nightModeColorSwitch: (nightModeToBe) => {\r\n      if(nightModeToBe == true){\r\n        setDarkestColor(\"#191919\");\r\n        setLighterDarkColor(\"#313131\");\r\n        setIsNightMode(true);\r\n      }\r\n      if(nightModeToBe == false){\r\n        setDarkestColor(\"#DDD\");\r\n        setLighterDarkColor(\"#CCC\");\r\n        setIsNightMode(false);\r\n      }\r\n    }\r\n  };\r\n  return {\r\n    state: {\r\n      windowWidth,\r\n      windowHeight,\r\n      redirect,\r\n      heightOfNavigator,\r\n      darkestColor,\r\n      lighterDarkColor,\r\n      isNightMode\r\n    },\r\n    callbackFunctions,\r\n  };\r\n};\r\nexport default UsePage;","import createWrapComponent from \"./createWrapComponent.js\";\r\nimport {\r\n  useEffect,\r\n  useRef,\r\n  default as React,\r\n} from \"react\";\r\n\r\n//list of contexts\r\nimport usePage from \"./usePage.js\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const Consumer = UserContext.Consumer;\r\nexport const wrapComponent = createWrapComponent(Consumer);\r\n\r\n/*\r\n  Has Props: \r\n    currentPage\r\n    changeAlertNotificationAppearance\r\n*/\r\n\r\nexport const ContextProvider = props => {\r\n  const hooksToImport = {\r\n    usePage,\r\n  };\r\n  const contextHasRanAtLeastOnce = useRef(false);\r\n  const reduceStartingPoint = useRef({ state: {}, constants: {} });\r\n  const savedConstants = useRef({});\r\n  const savedState = useRef({});\r\n\r\n  const deepValue = (obj, path) => {\r\n    for (var i = 0, path = path.split(\".\"), len = path.length; i < len; i++) {\r\n      obj = obj[path[i]];\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  for (var member in savedState.current) delete savedState.current[member];\r\n\r\n  //note that the big daddy hook needs to be instantiated first\r\n  //if you don't need any dependencies just don't put anything in this list\r\n  const hookDependencies = {\r\n    usePage: [\r\n      {\r\n        type: \"direct\",\r\n        pick: [props.widthOfCordovaSidebar, props.currentPage]\r\n      }\r\n    ],\r\n  };\r\n\r\n  //this makes sure that all the dependencies are injected properly\r\n  const importedHooks = Object.keys(hooksToImport).reduce(\r\n    (hookAccumulator, hookKey) => {\r\n      //console.log(\"hookaccumulator\",hookAccumulator);\r\n      //if you have stuff you gotta pass in\r\n      if (hookDependencies.hasOwnProperty(hookKey)) {\r\n        //we gotta go through all of those things\r\n        //and figure out what goes into the arguments\r\n        const stuffToPassIn = hookDependencies[hookKey].reduce((\r\n          argumentAccumulator,\r\n          //remember, the thingToPassIn is still an Object here\r\n          thingToPassIn\r\n        ) => {\r\n          //hook dependencies can be different\r\n          switch (thingToPassIn.type) {\r\n            case \"hook\":\r\n              argumentAccumulator.push(\r\n                ...thingToPassIn.pick.map(arg =>\r\n                  deepValue(hookAccumulator, arg)\r\n                )\r\n              );\r\n              break;\r\n            case \"direct\":\r\n            default:\r\n              argumentAccumulator.push(...thingToPassIn.pick);\r\n              break;\r\n          }\r\n          return argumentAccumulator;\r\n        }, []);\r\n\r\n        //HERE is where we actually call with the arguments\r\n        hookAccumulator[hookKey] = hooksToImport[hookKey](...stuffToPassIn);\r\n      } else {\r\n        hookAccumulator[hookKey] = hooksToImport[hookKey]();\r\n      }\r\n      return hookAccumulator;\r\n    },\r\n    {}\r\n  );\r\n  //once the hooks are created properly\r\n  //they need to pass in the stuff to context as the variable called value\r\n  //value has everything you need, state, constants, and ...functions\r\n\r\n  //console.log(\"but the context is still being rerendered\");\r\n\r\n  useEffect(() => {\r\n    reduceStartingPoint.current = {};\r\n  });\r\n\r\n  const value = Object.keys(importedHooks).reduce(\r\n    (aggregatedValues, hookKey) => {\r\n      const importableValues = contextHasRanAtLeastOnce.current\r\n        ? [\"state\"]\r\n        : [\"state\", \"constants\"];\r\n      importableValues.forEach(importableValue => {\r\n        return importedHooks[hookKey].hasOwnProperty(importableValue)\r\n          ? Object.keys(importedHooks[hookKey][importableValue]).forEach(\r\n            stateOrConstantKey => {\r\n              return (aggregatedValues[importableValue][stateOrConstantKey] =\r\n                importedHooks[hookKey][importableValue][stateOrConstantKey]);\r\n            }\r\n          )\r\n          : null;\r\n      });\r\n      //functions is the oddball\r\n      //hence why it is here\r\n      if (importedHooks[hookKey].hasOwnProperty(\"callbackFunctions\")) {\r\n        Object.keys(importedHooks[hookKey].callbackFunctions).forEach(\r\n          callbackFunctionKey => {\r\n            aggregatedValues[callbackFunctionKey] =\r\n              importedHooks[hookKey].callbackFunctions[callbackFunctionKey];\r\n          }\r\n        );\r\n      }\r\n      return aggregatedValues;\r\n    },\r\n    { state: {}, constants: savedConstants.current }\r\n  );\r\n\r\n  if (contextHasRanAtLeastOnce.current) {\r\n    value.constants = savedConstants.current;\r\n  }\r\n  //if this is the first time context is being ran,\r\n  //we need to save these values for the future times context runs\r\n  //so that it can copy the constants over\r\n  else {\r\n    //console.log(\"this is the first time context is running\");\r\n    savedConstants.current = value.constants;\r\n  }\r\n\r\n  contextHasRanAtLeastOnce.current = true;\r\n  //savedState.current = {};\r\n\r\n  value.state.currentPage = props.currentPage;\r\n  return (\r\n    <div>\r\n      <UserContext.Provider value={value}>\r\n        {props.children}\r\n      </UserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","import './App.css';\nimport React, {\n  lazy,\n} from \"react\";\nimport './index.css';\nimport {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport {\n  Consumer,\n  ContextProvider,\n} from \"./components/userContext/userContext.js\";\n\nconst SkettiOdinHome = lazy(() => import(\"./components/skettiOdinHome/index.js\"));\nconst Leaderboard = lazy(() => import(\"./components/leaderboard/index.js\"));\nconst WXAdventures = lazy(() => import(\"./components/WXAdventures/index.js\"));\nconst Logo = lazy(() => import(\"./components/logo/index.js\"));\nconst LogoWithoutBackground = lazy(() => import(\"./components/logoWithoutBackground/index.js\"))\n\nconst App = (props) => {\n  return (\n    <div>\n      <ContextProvider>\n        <Consumer>\n          {(context) => (\n            <Switch>\n              {!context.state.redirect.alreadyRedirected &&\n                context.state.redirect.where !== \"\" ? (\n                <Redirect\n                  to={{ pathname: context.state.redirect.pathname }}\n                />\n              ) : null}\n\n              <Route\n                exact={true}\n                path={'/'}\n                render={(props) => (\n                  <SkettiOdinHome\n                    {...props}\n                  />\n                )}\n              />\n\n              <Route\n                exact={true}\n                path={'/leaderboard'}\n                render={(props) => (\n                  <Leaderboard\n                    {...props}\n                  />\n                )}\n              />\n\n              <Route\n                exact={true}\n                path={'/wxadventures'}\n                render={(props) => (\n                  <WXAdventures\n                    {...props}\n                  />\n                )}\n              />\n\n            {/*\n              <Route\n                exact={true}\n                path={'/logo'}\n                render={(props) => (\n                  <Logo\n                    {...props}\n                  />\n                )}\n              />\n\n              <Route\n                exact={true}\n                path={'/logoWithoutBackground'}\n                render={(props) => (\n                  <LogoWithoutBackground\n                    {...props}\n                  />\n                )}\n              />\n            */}\n            \n            </Switch>\n          )}\n        </Consumer>\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}